/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Introductio;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * 
 * @author hassani 
 */
public class Chiffres extends javax.swing.JFrame {

	/**
	 * Creates new form Chiffres
	 */
	public Chiffres() {
		super("Jeu realiser par Malek (2013)");
		initComponents();
		rejouerbtn.setEnabled(false);
		
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jeupnl = new javax.swing.JPanel();
		val1tfd = new javax.swing.JTextField();
		val2tfd = new javax.swing.JTextField();
		val3tfd = new javax.swing.JTextField();
		val4tfd = new javax.swing.JTextField();
		val5tfd = new javax.swing.JTextField();
		val6tfd = new javax.swing.JTextField();
		resultattfd = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		solutiontxt = new javax.swing.JTextArea();
		resoudrebtn = new javax.swing.JButton();
		rejouerbtn = new javax.swing.JButton();
		quitterbtn = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);

		jeupnl.setBackground(new java.awt.Color(204, 255, 204));
		jeupnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null,
				"VEUILLEZ INTRODUIRE VOTRE SUITE DE CHIFFRES",
				javax.swing.border.TitledBorder.CENTER,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Tahoma", 2, 14), new java.awt.Color(0, 0,
						204))); // NOI18N

		val1tfd.setBackground(new java.awt.Color(204, 255, 153));

		val2tfd.setBackground(new java.awt.Color(204, 255, 153));

		val3tfd.setBackground(new java.awt.Color(204, 255, 153));

		val4tfd.setBackground(new java.awt.Color(204, 255, 153));

		val5tfd.setBackground(new java.awt.Color(204, 255, 153));

		val6tfd.setBackground(new java.awt.Color(204, 255, 153));

		resultattfd.setBackground(new java.awt.Color(255, 255, 0));

		jLabel1.setText("Donner le resultat à trouver :");

		solutiontxt.setBackground(new java.awt.Color(51, 255, 255));
		solutiontxt.setColumns(20);
		solutiontxt.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
		solutiontxt.setForeground(new java.awt.Color(255, 0, 0));
		solutiontxt.setRows(5);
		solutiontxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
		jScrollPane1.setViewportView(solutiontxt);

		resoudrebtn.setText("RESOUDRE");
		resoudrebtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				resoudrebtnActionPerformed(evt);
			}
		});

		rejouerbtn.setText("REJOUER");
		rejouerbtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rejouerbtnActionPerformed(evt);
			}
		});

		quitterbtn.setText("QUITTER");
		quitterbtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				quitterbtnActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jeupnlLayout = new javax.swing.GroupLayout(
				jeupnl);
		jeupnl.setLayout(jeupnlLayout);
		jeupnlLayout
				.setHorizontalGroup(jeupnlLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jeupnlLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jeupnlLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																jeupnlLayout
																		.createSequentialGroup()
																		.addComponent(
																				jScrollPane1,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addComponent(
																				resoudrebtn)
																		.addContainerGap())
														.addGroup(
																jeupnlLayout
																		.createSequentialGroup()
																		.addGroup(
																				jeupnlLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								javax.swing.GroupLayout.Alignment.TRAILING,
																								jeupnlLayout
																										.createSequentialGroup()
																										.addComponent(
																												val1tfd,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												43,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(18,
																												18,
																												18)
																										.addComponent(
																												val2tfd,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												43,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(13,
																												13,
																												13))
																						.addComponent(
																								jLabel1,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								160,
																								javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addGroup(
																				jeupnlLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								jeupnlLayout
																										.createSequentialGroup()
																										.addComponent(
																												resultattfd,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												96,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addContainerGap(
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												Short.MAX_VALUE))
																						.addGroup(
																								jeupnlLayout
																										.createSequentialGroup()
																										.addGap(5,
																												5,
																												5)
																										.addComponent(
																												val3tfd,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												43,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(18,
																												18,
																												18)
																										.addComponent(
																												val4tfd,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												43,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(18,
																												18,
																												18)
																										.addComponent(
																												val5tfd,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												43,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																												19,
																												Short.MAX_VALUE)
																										.addComponent(
																												val6tfd,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												43,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(30,
																												30,
																												30))))))
						.addGroup(
								jeupnlLayout
										.createSequentialGroup()
										.addGap(83, 83, 83)
										.addComponent(rejouerbtn)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(quitterbtn)
										.addGap(99, 99, 99)));
		jeupnlLayout
				.setVerticalGroup(jeupnlLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jeupnlLayout
										.createSequentialGroup()
										.addGap(32, 32, 32)
										.addGroup(
												jeupnlLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																val1tfd,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																val2tfd,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																val3tfd,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																val4tfd,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																val5tfd,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																val6tfd,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(18, 18, 18)
										.addGroup(
												jeupnlLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabel1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																resultattfd,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																35,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(
												jeupnlLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																jeupnlLayout
																		.createSequentialGroup()
																		.addGap(18,
																				18,
																				18)
																		.addComponent(
																				jScrollPane1,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				151,
																				Short.MAX_VALUE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																jeupnlLayout
																		.createSequentialGroup()
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addComponent(
																				resoudrebtn,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				33,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addGap(74,
																				74,
																				74)))
										.addGroup(
												jeupnlLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																rejouerbtn)
														.addComponent(
																quitterbtn))));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(jeupnl,
				javax.swing.GroupLayout.Alignment.TRAILING,
				javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(jeupnl,
				javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold> hassani malek

	private void resoudrebtnActionPerformed(java.awt.event.ActionEvent evt) {
		// lancene add your handling code here:
		if (val1tfd.getText().trim().equals("")
				| val2tfd.getText().trim().equals("")
				| val3tfd.getText().trim().equals("")
				| val4tfd.getText().trim().equals("")
				| val5tfd.getText().trim().equals("")
				| val6tfd.getText().trim().equals("")
				| resultattfd.getText().trim().equals("")) {
			JOptionPane.showMessageDialog(this,
					"Veuillez remplire les cases vides!!!!!!");
			return;

		}

		Solution();
		rejouerbtn.setEnabled(true);

	}

	private void rejouerbtnActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		initjeu();
	}

	private void quitterbtnActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.exit(0);
	}

	private void Solution() {
		int resultat;
		int i, pos;
		pos = 0;
		int tab[];
		tab = new int[6];
		char tabo[] = { '+', '-', '/', '*' };
		try {
			tab[0] = Integer.parseInt(val1tfd.getText());
			tab[1] = Integer.parseInt(val2tfd.getText());
			tab[2] = Integer.parseInt(val3tfd.getText());
			tab[3] = Integer.parseInt(val4tfd.getText());
			tab[4] = Integer.parseInt(val5tfd.getText());
			tab[5] = Integer.parseInt(val6tfd.getText());
			resultat = Integer.parseInt(resultattfd.getText());
		} catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(this,
					"VEUILLEZ INTRODUIRE DES VALEURS NUMIREQUE!!!");

			return;
		}
		boolean trouve;
		trouve = false;
		int j, k, l, m, n, o, p, q, r, s, mlk, a, b, z, w;
		i = 0;
		j = 0;
		k = 0;
		l = 0;
		m = 0;
		n = 0;
		o = 0;
		p = 0;
		q = 0;
		r = 0;
		s = 0;
		a = 0;
		b = 0;
		mlk = 0;

		int tabsol[];
		tabsol = new int[15];
		while ((i < 5) & (trouve == false)) {
			tabsol = new int[15];
			j = i + 1;
			while ((j < 6) & (trouve == false)) {
				o = 0;
				while ((o < 4) & (trouve == false)) {
					if (o == 0) {
						mlk = tab[i] + tab[j];
						tabsol[0] = tab[i];
						tabsol[1] = tab[j];
						tabsol[2] = mlk;
						if (mlk == resultat) {
							trouve = true;
							pos = 1;
						}
					} else {
						if (o == 1) {
							if (tab[i] > tab[j]) {
								mlk = tab[i] - tab[j];
								tabsol[0] = tab[i];
								tabsol[1] = tab[j];
								tabsol[2] = mlk;
								if (mlk == resultat) {
									pos = 1;
									trouve = true;
								}
							} else {
								if (tab[j] > tab[i]) {
									mlk = tab[j] - tab[i];
									tabsol[0] = tab[j];
									tabsol[1] = tab[i];
									tabsol[2] = mlk;
									if (mlk == resultat) {
										pos = 1;
										trouve = true;
									}

								} else {
									mlk = 1;
									tabsol[0] = tab[i];
									tabsol[1] = tab[j];
									tabsol[2] = mlk;
									o = 2;
								}
							}
						} else {
							if (o == 2) {
								if (((tab[i] % tab[j]) == 0)
										& (tab[i] >= tab[j]) & (tab[j] != 0)) {
									mlk = tab[i] / tab[j];
									tabsol[0] = tab[i];
									tabsol[1] = tab[j];
									tabsol[2] = mlk;
									if (mlk == resultat) {
										pos = 1;
										trouve = true;
									}

								} else {
									if (((tab[j] % tab[i]) == 0)
											& (tab[j] > tab[i]) & (tab[i] != 0)) {
										mlk = tab[j] / tab[i];
										tabsol[0] = tab[j];
										tabsol[1] = tab[i];
										tabsol[2] = mlk;
										if (mlk == resultat) {
											pos = 1;
											trouve = true;
										}

									} else {
										mlk = tab[i] * tab[j];
										tabsol[0] = tab[i];
										tabsol[1] = tab[j];
										tabsol[2] = mlk;
										o = 3;
										if (mlk == resultat) {
											pos = 1;
											trouve = true;

										}

									}

								}
							} else {
								mlk = tab[i] * tab[j];
								tabsol[0] = tab[i];
								tabsol[1] = tab[j];
								tabsol[2] = mlk;
								if (mlk == resultat) {
									pos = 1;
									trouve = true;
								}

							}
						}
					}
					int tab1[];
					tab1 = new int[5];
					tab1[0] = mlk;
					w = 1;
					for (z = 0; z < 6; z++) {
						if ((z != i) & (z != j)) {
							tab1[w] = tab[z];
							w++;
						}

					}
					l = 0;
					while ((l < 4) & (trouve == false)) {
						k = l + 1;
						while ((k < 5) & (trouve == false)) {
							p = 0;
							while ((p < 4) & (trouve == false)) {
								if (p == 0) {
									mlk = tab1[l] + tab1[k];
									tabsol[3] = tab1[l];
									tabsol[4] = tab1[k];
									tabsol[5] = mlk;
									if (mlk == resultat) {
										trouve = true;
									}
								} else {
									if (p == 1) {
										if (tab1[l] > tab1[k]) {
											mlk = tab1[l] - tab1[k];
											tabsol[3] = tab1[l];
											tabsol[4] = tab1[k];
											tabsol[5] = mlk;
											if (mlk == resultat) {
												trouve = true;
											}
										} else {
											if (tab1[k] > tab1[l]) {
												mlk = tab1[k] - tab1[l];
												tabsol[3] = tab1[k];
												tabsol[4] = tab1[l];
												tabsol[5] = mlk;
												if (mlk == resultat) {
													trouve = true;
												}
											} else {
												mlk = 1;
												tabsol[3] = tab1[l];
												tabsol[4] = tab1[k];
												tabsol[5] = mlk;
												p = 2;
											}
										}
									} else {
										if (p == 2) {
											if (((tab1[l] % tab1[k]) == 0)
													& (tab1[l] >= tab1[k])
													& (tab1[k] != 0)) {
												mlk = tab1[l] / tab1[k];
												tabsol[3] = tab1[l];
												tabsol[4] = tab1[k];
												tabsol[5] = mlk;
												if (mlk == resultat) {
													trouve = true;
												}
											} else {
												if (((tab1[k] % tab1[l]) == 0)
														& (tab1[k] > tab1[l])
														& (tab1[l] != 0)) {
													mlk = tab1[k] / tab1[l];
													tabsol[3] = tab1[k];
													tabsol[4] = tab1[l];
													tabsol[5] = mlk;
													if (mlk == resultat) {
														trouve = true;
													}
												} else {
													mlk = tab1[l] * tab1[k];
													tabsol[3] = tab1[l];
													tabsol[4] = tab1[k];
													tabsol[5] = mlk;
													p = 3;
													if (mlk == resultat) {
														trouve = true;
													}

												}

											}
										} else {
											mlk = tab1[l] * tab1[k];
											tabsol[3] = tab1[l];
											tabsol[4] = tab1[k];
											tabsol[5] = mlk;
											if (mlk == resultat) {
												trouve = true;
											}
										}
									}
								}
								if (trouve == true) {
									pos = 2;
								}

								int tab2[];
								tab2 = new int[4];
								tab2[0] = mlk;
								w = 1;
								for (z = 0; z < 5; z++) {
									if ((z != l) & (z != k)) {
										tab2[w] = tab1[z];
										w++;
									}

								}
								m = 0;
								while ((m < 3) & (trouve == false)) {
									n = m + 1;
									while ((n < 4) & (trouve == false)) {
										q = 0;
										while ((q < 4) & (trouve == false)) {
											if (q == 0) {
												mlk = tab2[m] + tab2[n];
												tabsol[6] = tab2[m];
												tabsol[7] = tab2[n];
												tabsol[8] = mlk;
												if (mlk == resultat) {
													trouve = true;
												}
											} else {
												if (q == 1) {
													if (tab2[m] > tab2[n]) {
														mlk = tab2[m] - tab2[n];
														tabsol[6] = tab2[m];
														tabsol[7] = tab2[n];
														tabsol[8] = mlk;
														if (mlk == resultat) {
															trouve = true;
														}
													} else {
														if (tab2[n] > tab2[m]) {
															mlk = tab2[n]
																	- tab2[m];
															tabsol[6] = tab2[n];
															tabsol[7] = tab2[m];
															tabsol[8] = mlk;
															if (mlk == resultat) {
																trouve = true;
															}
														} else {
															mlk = 1;
															tabsol[6] = tab2[m];
															tabsol[7] = tab2[n];
															tabsol[8] = mlk;
															q = 2;
														}
													}
												} else {
													if (q == 2) {
														if (((tab2[m] % tab2[n]) == 0)
																& (tab2[m] > tab2[n])
																& (tab2[n] != 0)) {
															mlk = tab2[m]
																	/ tab2[n];
															tabsol[6] = tab2[m];
															tabsol[7] = tab2[n];
															tabsol[8] = mlk;
															if (mlk == resultat) {
																trouve = true;
															}
														} else {
															if (((tab2[n] % tab2[m]) == 0)
																	& (tab2[n] > tab2[m])
																	& (tab2[m] != 0)) {
																mlk = tab2[n]
																		/ tab2[m];
																tabsol[6] = tab2[n];
																tabsol[7] = tab2[m];
																tabsol[8] = mlk;
																if (mlk == resultat) {
																	trouve = true;
																}
															} else {
																mlk = tab2[m]
																		* tab2[n];
																tabsol[6] = tab2[m];
																tabsol[7] = tab2[n];
																tabsol[8] = mlk;
																q = 3;
																if (mlk == resultat) {
																	trouve = true;
																}

															}

														}
													} else {
														mlk = tab2[m] * tab2[n];
														tabsol[6] = tab2[m];
														tabsol[7] = tab2[n];
														tabsol[8] = mlk;
														if (mlk == resultat) {
															trouve = true;
														}
													}
												}
											}

											if (trouve == true) {
												pos = 3;
											}

											int tab3[];
											tab3 = new int[3];
											tab3[0] = mlk;
											w = 1;
											for (z = 0; z < 4; z++) {
												if ((z != m) & (z != n)) {
													tab3[w] = tab2[z];
													w++;
												}

											}
											a = 0;
											while ((a < 2) & (trouve == false)) {
												b = a + 1;
												while ((b < 3)
														& (trouve == false)) {
													r = 0;
													while ((r < 4)
															& (trouve == false)) {
														if (r == 0) {
															mlk = tab3[a]
																	+ tab3[b];
															tabsol[9] = tab3[a];
															tabsol[10] = tab3[b];
															tabsol[11] = mlk;
															if (mlk == resultat) {
																trouve = true;
															}
														} else {
															if (r == 1) {
																if (tab3[a] > tab3[b]) {
																	mlk = tab3[a]
																			- tab3[b];
																	tabsol[9] = tab3[a];
																	tabsol[10] = tab3[b];
																	tabsol[11] = mlk;
																	if (mlk == resultat) {
																		trouve = true;
																	}
																} else {
																	if (tab3[b] > tab3[a]) {
																		mlk = tab3[b]
																				- tab3[a];
																		tabsol[9] = tab3[b];
																		tabsol[10] = tab3[a];
																		tabsol[11] = mlk;
																		if (mlk == resultat) {
																			trouve = true;
																		}
																	} else {
																		mlk = 1;
																		tabsol[9] = tab3[a];
																		tabsol[10] = tab3[b];
																		tabsol[11] = mlk;
																		r = 2;
																	}
																}
															} else {
																if (r == 2) {
																	if (((tab3[a] % tab3[b]) == 0)
																			& (tab3[a] > tab3[b])
																			& (tab3[b] != 0)) {
																		mlk = tab3[a]
																				/ tab3[b];
																		tabsol[9] = tab3[a];
																		tabsol[10] = tab3[b];
																		tabsol[11] = mlk;
																		if (mlk == resultat) {
																			trouve = true;
																		}
																	} else {
																		if (((tab3[b] % tab3[a]) == 0)
																				& (tab3[b] > tab3[a])
																				& (tab3[a] != 0)) {
																			mlk = tab3[b]
																					/ tab3[a];
																			tabsol[9] = tab3[b];
																			tabsol[10] = tab3[a];
																			tabsol[11] = mlk;
																			if (mlk == resultat) {
																				trouve = true;
																			}
																		} else {
																			mlk = tab3[a]
																					* tab3[b];
																			tabsol[9] = tab3[a];
																			tabsol[10] = tab3[b];
																			tabsol[11] = mlk;
																			r = 3;
																			if (mlk == resultat) {
																				trouve = true;
																			}

																		}

																	}
																} else {
																	mlk = tab3[a]
																			* tab3[b];
																	tabsol[9] = tab3[a];
																	tabsol[10] = tab3[b];
																	tabsol[11] = mlk;
																	if (mlk == resultat) {
																		trouve = true;
																	}
																}
															}
														}

														if (trouve == true) {
															pos = 4;
														}

														int tab4[];
														tab4 = new int[2];
														tab4[0] = mlk;
														w = 1;
														for (z = 0; z < 3; z++) {
															if ((z != a)
																	& (z != b)) {
																tab4[w] = tab3[z];
																w++;
															}

														}
														s = 0;
														while ((s < 4)
																& (trouve == false)) {
															if (s == 0) {
																mlk = tab4[0]
																		+ tab4[1];
																tabsol[12] = tab4[0];
																tabsol[13] = tab4[1];
																tabsol[14] = mlk;
																if (mlk == resultat) {
																	trouve = true;
																}
															} else {
																if (s == 1) {
																	if (tab4[0] > tab4[1]) {
																		mlk = tab4[0]
																				- tab4[1];
																		tabsol[12] = tab4[0];
																		tabsol[13] = tab4[1];
																		tabsol[14] = mlk;
																		if (mlk == resultat) {
																			{
																				trouve = true;
																			}
																		}
																	} else {
																		if (tab4[1] > tab4[0]) {
																			mlk = tab4[1]
																					- tab4[0];
																			tabsol[12] = tab4[1];
																			tabsol[13] = tab4[0];
																			tabsol[14] = mlk;
																			if (mlk == resultat) {
																				trouve = true;
																			}
																		} else {
																			mlk = 1;
																			tabsol[12] = tab4[0];
																			tabsol[13] = tab4[1];
																			tabsol[14] = mlk;
																			s = 2;
																		}
																	}
																} else {
																	if (s == 2) {
																		if (((tab4[0] % tab4[1]) == 0)
																				& (tab4[0] > tab4[1])
																				& (tab4[1] != 0)) {
																			mlk = tab4[0]
																					/ tab4[1];
																			tabsol[12] = tab4[0];
																			tabsol[13] = tab4[1];
																			tabsol[14] = mlk;
																			if (mlk == resultat) {
																				trouve = true;
																			}
																		} else {
																			if (((tab4[1] % tab4[0]) == 0)
																					& (tab4[1] > tab4[0])
																					& (tab4[0] != 0)) {
																				mlk = tab4[1]
																						/ tab4[0];
																				tabsol[12] = tab4[1];
																				tabsol[13] = tab4[0];
																				tabsol[14] = mlk;
																				if (mlk == resultat) {
																					trouve = true;
																				}
																			} else {
																				mlk = tab4[0]
																						* tab4[1];
																				tabsol[12] = tab4[0];
																				tabsol[13] = tab4[1];
																				tabsol[14] = mlk;
																				s = 3;
																				if (mlk == resultat) {
																					trouve = true;
																				}
																			}

																		}
																	} else {
																		mlk = tab4[0]
																				* tab4[1];
																		tabsol[12] = tab4[0];
																		tabsol[13] = tab4[1];
																		tabsol[14] = mlk;
																		if (mlk == resultat) {
																			trouve = true;
																		}
																	}
																}
															}
															if (trouve == true) {
																pos = 5;
															}

															s++;
														}// while s
														// 4eme condition
														r++;
													}// while r
													b++;
												}// while b
												a++;
											}// while a

											// 3eme condition
											q++;
										}// while q
										n++;
									}// while n
									m++;
								}// while m

								// 2eme condition

								p++;
							}// while p
							k++;
						}// while k
						l++;
					}// while l
					// 1ere condition

					o++;
				}// while o
				j++;
			}// while j
			i++;
		}// while i

		o = o - 1;
		p = p - 1;
		q = q - 1;
		r = r - 1;
		s = s - 1;
		if (trouve) {
			if (pos == 5) {
				solutiontxt.setText("" + tabsol[0] + "" + tabo[o] + ""
						+ tabsol[1] + "=" + tabsol[2] + "\n" + "" + tabsol[3]
						+ "" + tabo[p] + "" + tabsol[4] + "=" + tabsol[5]
						+ "\n" + "" + tabsol[6] + "" + tabo[q] + "" + tabsol[7]
						+ "=" + tabsol[8] + "\n" + "" + tabsol[9] + ""
						+ tabo[r] + "" + tabsol[10] + "=" + tabsol[11] + "\n"
						+ "" + tabsol[12] + "" + tabo[s] + "" + tabsol[13]
						+ "=" + tabsol[14]);
			} else {
				if (pos == 4) {
					solutiontxt.setText("" + tabsol[0] + "" + tabo[o] + ""
							+ tabsol[1] + "=" + tabsol[2] + "\n" + ""
							+ tabsol[3] + "" + tabo[p] + "" + tabsol[4] + "="
							+ tabsol[5] + "\n" + "" + tabsol[6] + "" + tabo[q]
							+ "" + tabsol[7] + "=" + tabsol[8] + "\n" + ""
							+ tabsol[9] + "" + tabo[r] + "" + tabsol[10] + "="
							+ tabsol[11] + "\n");
				} else {
					if (pos == 3) {
						solutiontxt.setText("" + tabsol[0] + "" + tabo[o] + ""
								+ tabsol[1] + "=" + tabsol[2] + "\n" + ""
								+ tabsol[3] + "" + tabo[p] + "" + tabsol[4]
								+ "=" + tabsol[5] + "\n" + "" + tabsol[6] + ""
								+ tabo[q] + "" + tabsol[7] + "=" + tabsol[8]
								+ "\n");
					} else {
						if (pos == 2) {
							solutiontxt.setText("" + tabsol[0] + "" + tabo[o]
									+ "" + tabsol[1] + "=" + tabsol[2] + "\n"
									+ "" + tabsol[3] + "" + tabo[p] + ""
									+ tabsol[4] + "=" + tabsol[5] + "\n");
						} else {
							if (pos == 1) {
								solutiontxt.setText("" + tabsol[0] + ""
										+ tabo[o] + "" + tabsol[1] + "="
										+ tabsol[2] + "\n");
							}

						}
					}

				}
			}
		} else {
			solutiontxt.setText("PAS DE SOLUTION");
		}
	}

	private void initjeu() {
		resoudrebtn.setEnabled(true);
		resultattfd.setText("");
		solutiontxt.setText("");
		val1tfd.setText("");
		val2tfd.setText("");
		val3tfd.setText("");
		val4tfd.setText("");
		val5tfd.setText("");
		val6tfd.setText("");
		rejouerbtn.setEnabled(false);
		// End of variables declaration
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Chiffres.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Chiffres.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Chiffres.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Chiffres.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Chiffres().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JPanel jeupnl;
	private javax.swing.JButton quitterbtn;
	private javax.swing.JButton rejouerbtn;
	private javax.swing.JButton resoudrebtn;
	private javax.swing.JTextField resultattfd;
	private javax.swing.JTextArea solutiontxt;
	private javax.swing.JTextField val1tfd;
	private javax.swing.JTextField val2tfd;
	private javax.swing.JTextField val3tfd;
	private javax.swing.JTextField val4tfd;
	private javax.swing.JTextField val5tfd;
	private javax.swing.JTextField val6tfd;
	// End of variables declaration
}
